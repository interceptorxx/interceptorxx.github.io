name: Install Node

on:
  workflow_call:
    inputs:
      username:
        required: true
        type: string
    secrets:
      token:
        required: true

jobs:
  node:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: myapp-qa
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore cache
        id: restore-cached-dependencies
        uses: actions/cache/restore@v3
        with:
          path: |
            ./myapp-qa
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}   

      - name: Cache dependencies
        id: save-cached-dependencies
        uses: actions/cache/save@v3
        with:
          path: |
            ./myapp-qa
          key: ${{ steps.restore-cached-dependencies.outputs.cache-primary-key }}

      - name: Debug Cache Key
        run: echo "Cache Key - ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}"
      
      - name: Debug Cache Hit
        run: echo "Cache Hit - ${{ steps.restore-cached-dependencies.outputs.cache-primary-key }}"

      - name: Debug Directory Structure
        run: |
          pwd
          ls -a

      - name: Install Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm with Node.js 20
        run: npm install -g pnpm

      - name: Install dependencies
        if: steps.restore-cached-dependencies.outputs.cache-hit != 'true'
        run: pnpm install

      - name: Debug
        run: |
          pwd
          ls -a  # Check if files are listed without detailed information
          ls -alA



          
      # - name: Cache pnpm
      #   id: pnpm-lock-id
      #   uses: actions/cache@v3
      #   with:
      #     path: |
      #       ./
      #     key: pnpm-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
      #     restore-keys: |
      #       pnpm-${{ runner.os }}-build
      #       pnpm-${{ runner.os }}-
        
